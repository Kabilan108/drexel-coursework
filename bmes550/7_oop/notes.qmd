---
title: "Object-Oriented Programming"
author: "Tony Kabilan Okeke"
format:
    html:
        fig-width: 4
        toc: true
        toc-depth: 3
        toc-title: "Contents"
        toc-location: left
        code-fold: false
        theme: sandstone
comments: 
    hypothesis: true
jupyter: python3
---

## Reading

- [Introduction to Object-Oriented Programming in MATLAB](https://www.mathworks.com/company/newsletters/articles/introduction-to-object-oriented-programming-in-matlab.html)
- [Parts of a class definition](https://www.mathworks.com/help/matlab/matlab_oop/developing-classes-typical-workflow.html#brhzucu)
- [Attribute Specification](https://www.mathworks.com/help/matlab/matlab_oop/class-attributes.html)
- [Set and Get Methods for Dependent Projects](https://www.mathworks.com/help/matlab/matlab_oop/access-methods-for-dependent-properties.html)
- [Call Superclass Methods on Subclass Objects](https://www.mathworks.com/help/matlab/matlab_oop/calling-superclass-methods-on-subclass-objects.html)
- Optional Reading: [What is Object-Oriented Programming](https://www.stroustrup.com/whatis.pdf) by Bjarne Stroustrup

## Person Class

- Implement a person class with properties `name`, `age`, `zipcode`
  - **Test:** Create a person object, set its properties.

- Add a constructor method that helps initialize a new person with `name`, `age`, `zipcode`
  - **Constructor** is a method that has the same name as the class
  - Constructor must return the constructed object.

- Add a method `incrementage()`. Make sure to return the object as output variable.
  - **Test:** Does calling `incrementage()` on a person variable change that person?

- Change person to inherit from handle class.
  - **Test:** Does calling `incrementage()` on a person variable change that person?
  - Switch back to NOT inheriting from handle class for the remainder of this demo.

- Make the name read-only by setting SetAccess attribute to private.
  - **Test:** Try changing name of a person object.

- Implement a method `getbirthyear()` to calculate the year the person was born.
  - You can get the current year using the first element from clock()'s output.

- Add a dependent variable `birthyear` and a “getter” for it.
  - Implement a `disp()` method to customize how a person is printed.

## Student Class

- Implement a student class (who is a person) with properties program, concentration,
  degreeyear, and coursegrade.

- We would like to use a student's grade whenever we are using a student in an
  arithmetic context.
  - Implement the double() method to control how a student object is converted to a
    number.

- You can overload mathematical operators. E.g., overload + operator by implementing a
  plus() method.

- Test the plus operator.

